{"version":3,"sources":["test/styles.ts","../../src/components/common/error-message/index.tsx","../../src/components/common/required-indication/index.tsx","../../src/components/text-field/index.tsx","../../node_modules/@babel/runtime/helpers/defineProperty.js","../../node_modules/@babel/runtime/helpers/classCallCheck.js","../../node_modules/@babel/runtime/helpers/createClass.js","../../node_modules/react-i18next/dist/es/context.js","../../node_modules/react-i18next/dist/es/utils.js","../../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../../node_modules/@babel/runtime/helpers/nonIterableRest.js","../../node_modules/@babel/runtime/helpers/slicedToArray.js","../../node_modules/react-i18next/dist/es/useTranslation.js","../../src/components/text-area/index.tsx","../../src/components/postal-input/index.tsx","../../src/components/select-input/index.tsx","../../src/components/country-code/index.tsx","../../src/components/number-input/index.tsx","../../src/components/email-input/index.tsx","../../src/components/date-time-range/time-picker.tsx","../../src/components/date-time-range/time-range-picker.tsx","../../src/components/date-time-range/date-picker.tsx","../../src/components/date-time-range/date-range-picker.tsx","../../src/components/date-time-range/date-time-picker.tsx","../../src/components/date-time-range/date-time-range-picker.tsx","../../src/components/date-time-range/index.tsx","../../src/components/dialog-box/index.tsx","test/test-01/index.jsx","test/test-02/index.jsx","test/test-03/index.jsx","App.js","index.js"],"names":["containerStyles","width","padding","inputStyles","marginBottom","ErrorMessage","error","style","paddingLeft","color","fontSize","RequiredSign","className","TextField","value","innerRef","onChange","attrs","valid","invalid","required","minLength","maxLength","texts","useState","setError","targetValue","setTargetValue","toBeValidate","setToBeValidate","handleChange","e","setNoWhiteSpace","validateLength","fixToBeValidate","React","type","placeholder","onBlur","fixTargetValue","removeSpaces","obj","key","Object","defineProperty","enumerable","configurable","writable","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","protoProps","staticProps","prototype","defaultOptions","bindI18n","bindI18nStore","transEmptyNodeValue","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","useSuspense","I18nContext","createContext","getDefaults","ReportNamespaces","_classCallCheck","this","usedNamespaces","_createClass","namespaces","_this","forEach","ns","keys","warn","console","_console","_len","arguments","args","Array","_key","concat","apply","alreadyWarned","warnOnce","_len2","_key2","Date","loadNamespaces","i18n","cb","isInitialized","on","initialized","setTimeout","off","hasLoadedNamespace","options","undefined","languages","lng","fallbackLng","lastLng","toLowerCase","loadNotPending","l","n","loadState","services","backendConnector","state","indexOf","backend","isLanguageChangingTo","hasResourceBundle","arr","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","push","err","len","arr2","o","minLen","arrayLikeToArray","toString","call","slice","constructor","name","from","test","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","TextAreaInput","isRequired","locale","errMessage","setErrMessage","t","i18nFromProps","_ref","i18nFromContext","defaultNSFromContext","defaultNS","getI18n","reportNamespaces","notReadyT","k","retNotReady","ready","i18nOptions","react","addUsedNamespaces","initializedStoreOnce","every","getT","getFixedT","nsMode","_useState","_useState2","_slicedToArray","setT","isMounted","boundReset","current","store","split","join","ret","Promise","resolve","useTranslation","val","chars","ascii","c","String","toASCII","PostalInput","SelectInput","isMulti","classNamePrefix","isClearable","isDisabled","onCreateOption","defaultValue","getOptionLabel","getOptionValue","selectedOptions","setSelectedOptions","useEffect","selected","renderErrorMessage","CountryInput","textVal","setTextVal","onChangeHandler","check","checkLength","checkFormat","NumberInput","isDecimal","decimalPlace","decimalCount","num","pos","decimal","num1","checkValue","parseInt","EmailInput","validateEmail","fixedEmail","expression","TimePicker","timeFormat","customInput","inputType","onSelect","startTime","setStartTime","validateTime","handleRawChange","checkTime","checkChar","validateRequired","handleBlur","DisabledInput","onClick","ref","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","onChangeRaw","date","placeholderText","TimeRangePicker","endTime","setEndTime","DatePicker","startDate","setStartDate","validateDate","checkDateSlashes","checkDateDashes","validateMMDDYY","validateDDMMYY","adjustDateOnChange","showMonthDropdown","showYearDropdown","DateRangePicker","endDate","setEndDate","selectsStart","selectsEnd","minDate","DateTimePicker","DateTimeRangePickerDefault","DateTimeRangePicker","Dialog","headerText","bodyText","okText","closeText","callback","toggleDialog","isOpen","headerClassName","bodyClassName","footerClassName","closeButtonClassName","okButtonClassName","hideCloseButton","onOpened","onClosed","toggle","icon","fa","size","TestComponent01","textFieldRef","useRef","emailInputRef","datePickerRef","log","title","placeHolder","margin","TestComponent02","dialog","setDialog","contryInput","numberInput","refDialog","empty","min","max","alert","createOption","label","replace","optionFlavours","TestComponent03","textAreaInput","postalInput","selectInput","opt","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1873c58.chunk.js","sourcesContent":["export const containerStyles = {\r\n  width: '90%',\r\n  padding: '5px'\r\n}\r\n\r\nexport const inputStyles = {\r\n  marginBottom: '20px',\r\n  padding: '5px'\r\n}\r\n","import React from 'react'\r\nimport * as types from './types'\r\n\r\nexport const ErrorMessage: React.FC<types.ErrorType> = ({ error }) => {\r\n  const errorStyles = {\r\n    marginBottom: '5px',\r\n    paddingLeft: '5px',\r\n    color: '#dc3545',\r\n    fontSize: '12px'\r\n  }\r\n\r\n  return <p style={errorStyles}>{error}</p>\r\n}\r\n","import React from 'react'\r\n\r\nexport const RequiredSign: React.FC<{}> = () => {\r\n  return <span className='text-danger'>*</span>\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Input, Label } from 'reactstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport * as types from './types'\r\nimport { ErrorMessage } from '../common/error-message'\r\nimport { RequiredSign } from '../common/required-indication'\r\n\r\nexport const TextField: React.FC<types.InputType> = ({\r\n  value,\r\n  innerRef,\r\n  onChange,\r\n  attrs,\r\n  valid,\r\n  invalid,\r\n  required,\r\n  minLength,\r\n  maxLength,\r\n  texts\r\n}) => {\r\n  const [error, setError] = useState('')\r\n  const [targetValue, setTargetValue] = useState(value)\r\n  const [toBeValidate, setToBeValidate] = useState(targetValue)\r\n\r\n  const handleChange = (e: any) => {\r\n    e.preventDefault()\r\n    const setNoWhiteSpace = e.target.value\r\n    setToBeValidate(setNoWhiteSpace.replace(/(^\\s*)/gi, ''))\r\n    onChange(e)\r\n  }\r\n\r\n  const validateLength = () => {\r\n    const fixToBeValidate = toBeValidate\r\n      .replace(/(^\\s*)|(\\s*$)/gi, '')\r\n      .replace(/[ ]{2,}/gi, ' ')\r\n      .replace(/\\n +/, '\\n')\r\n\r\n    if (minLength !== undefined && minLength > fixToBeValidate.length) {\r\n      setError(`Must be minimum of ${minLength} characters only`)\r\n    } else if (maxLength !== undefined && maxLength < fixToBeValidate.length) {\r\n      setError(`Must be maximum of ${maxLength} characters only`)\r\n    } else {\r\n      setError('')\r\n    }\r\n  }\r\n\r\n  const validateRequired = () => {\r\n    if (required === true) {\r\n      if (toBeValidate === '') {\r\n        setError(texts?.empty || `Please enter ${attrs?.title || ''}`)\r\n        setTargetValue('')\r\n      } else {\r\n        validateLength()\r\n      }\r\n    } else {\r\n      validateLength()\r\n    }\r\n  }\r\n\r\n  const removeSpaces = () => {\r\n    const fixTargetValue = value\r\n      .replace(/(^\\s*)|(\\s*$)/gi, '')\r\n      .replace(/[ ]{2,}/gi, ' ')\r\n      .replace(/\\n +/, '\\n')\r\n    const fixToBeValidate = toBeValidate\r\n      .replace(/(^\\s*)|(\\s*$)/gi, '')\r\n      .replace(/[ ]{2,}/gi, ' ')\r\n      .replace(/\\n +/, '\\n')\r\n    setToBeValidate(fixToBeValidate)\r\n    setTargetValue(fixTargetValue)\r\n  }\r\n\r\n  const handleBlur = () => {\r\n    validateRequired()\r\n    if (error !== '') {\r\n      removeSpaces()\r\n      setTargetValue(value)\r\n    } else {\r\n      setToBeValidate(\r\n        toBeValidate\r\n          .replace(/(^\\s*)|(\\s*$)/gi, '')\r\n          .replace(/[ ]{2,}/gi, ' ')\r\n          .replace(/\\n +/, '\\n')\r\n      )\r\n      setTargetValue(\r\n        toBeValidate\r\n          .replace(/(^\\s*)|(\\s*$)/gi, '')\r\n          .replace(/[ ]{2,}/gi, ' ')\r\n          .replace(/\\n +/, '\\n')\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderTextCounter = () => (\r\n    <React.Fragment>\r\n      {toBeValidate.length}/{maxLength || 100}\r\n    </React.Fragment>\r\n  )\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {required && <RequiredSign />}\r\n      <Label>\r\n        {attrs?.title}: {renderTextCounter()}\r\n      </Label>\r\n      <Input\r\n        type='text'\r\n        value={toBeValidate}\r\n        required={required}\r\n        style={attrs?.style}\r\n        className={attrs?.className}\r\n        placeholder={attrs?.placeHolder || `Enter ${attrs?.title || ''}`}\r\n        invalid={invalid || error !== ''}\r\n        onBlur={handleBlur}\r\n        onChange={(val: any) => handleChange(val)}\r\n        minLength={minLength || 0}\r\n        maxLength={100}\r\n        innerRef={innerRef}\r\n        valid={valid}\r\n      />\r\n      <ErrorMessage error={error} />\r\n    </React.Fragment>\r\n  )\r\n}\r\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nvar defaultOptions = {\n  bindI18n: 'languageChanged',\n  bindI18nStore: '',\n  // nsMode: 'fallback' // loop through all namespaces given to hook, HOC, render prop for key lookup\n  transEmptyNodeValue: '',\n  transSupportBasicHtmlNodes: true,\n  transKeepBasicHtmlNodesFor: ['br', 'strong', 'i', 'p'],\n  // hashTransKey: key => key // calculate a key for Trans component based on defaultValue\n  useSuspense: true\n};\nvar i18nInstance;\nexport var I18nContext = React.createContext();\nexport function setDefaults() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  defaultOptions = _objectSpread({}, defaultOptions, {}, options);\n}\nexport function getDefaults() {\n  return defaultOptions;\n}\nexport var ReportNamespaces = /*#__PURE__*/function () {\n  function ReportNamespaces() {\n    _classCallCheck(this, ReportNamespaces);\n\n    this.usedNamespaces = {};\n  }\n\n  _createClass(ReportNamespaces, [{\n    key: \"addUsedNamespaces\",\n    value: function addUsedNamespaces(namespaces) {\n      var _this = this;\n\n      namespaces.forEach(function (ns) {\n        if (!_this.usedNamespaces[ns]) _this.usedNamespaces[ns] = true;\n      });\n    }\n  }, {\n    key: \"getUsedNamespaces\",\n    value: function getUsedNamespaces() {\n      return Object.keys(this.usedNamespaces);\n    }\n  }]);\n\n  return ReportNamespaces;\n}();\nexport function setI18n(instance) {\n  i18nInstance = instance;\n}\nexport function getI18n() {\n  return i18nInstance;\n}\nexport var initReactI18next = {\n  type: '3rdParty',\n  init: function init(instance) {\n    setDefaults(instance.options.react);\n    setI18n(instance);\n  }\n};\nexport function composeInitialProps(ForComponent) {\n  return function (ctx) {\n    return new Promise(function (resolve) {\n      var i18nInitialProps = getInitialProps();\n\n      if (ForComponent.getInitialProps) {\n        ForComponent.getInitialProps(ctx).then(function (componentsInitialProps) {\n          resolve(_objectSpread({}, componentsInitialProps, {}, i18nInitialProps));\n        });\n      } else {\n        resolve(i18nInitialProps);\n      }\n    });\n  }; // Avoid async for now - so we do not need to pull in regenerator\n  // return async ctx => {\n  //   const componentsInitialProps = ForComponent.getInitialProps\n  //     ? await ForComponent.getInitialProps(ctx)\n  //     : {};\n  //   const i18nInitialProps = getInitialProps();\n  //   return {\n  //     ...componentsInitialProps,\n  //     ...i18nInitialProps,\n  //   };\n  // };\n}\nexport function getInitialProps() {\n  var i18n = getI18n();\n  var namespaces = i18n.reportNamespaces ? i18n.reportNamespaces.getUsedNamespaces() : [];\n  var ret = {};\n  var initialI18nStore = {};\n  i18n.languages.forEach(function (l) {\n    initialI18nStore[l] = {};\n    namespaces.forEach(function (ns) {\n      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};\n    });\n  });\n  ret.initialI18nStore = initialI18nStore;\n  ret.initialLanguage = i18n.language;\n  return ret;\n}","export function warn() {\n  if (console && console.warn) {\n    var _console;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (typeof args[0] === 'string') args[0] = \"react-i18next:: \".concat(args[0]);\n\n    (_console = console).warn.apply(_console, args);\n  }\n}\nvar alreadyWarned = {};\nexport function warnOnce() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  if (typeof args[0] === 'string' && alreadyWarned[args[0]]) return;\n  if (typeof args[0] === 'string') alreadyWarned[args[0]] = new Date();\n  warn.apply(void 0, args);\n} // not needed right now\n//\n// export function deprecated(...args) {\n//   if (process && process.env && (!process.env.NODE_ENV || process.env.NODE_ENV === 'development')) {\n//     if (typeof args[0] === 'string') args[0] = `deprecation warning -> ${args[0]}`;\n//     warnOnce(...args);\n//   }\n// }\n\nexport function loadNamespaces(i18n, ns, cb) {\n  i18n.loadNamespaces(ns, function () {\n    // delay ready if not yet initialized i18n instance\n    if (i18n.isInitialized) {\n      cb();\n    } else {\n      var initialized = function initialized() {\n        // due to emitter removing issue in i18next we need to delay remove\n        setTimeout(function () {\n          i18n.off('initialized', initialized);\n        }, 0);\n        cb();\n      };\n\n      i18n.on('initialized', initialized);\n    }\n  });\n}\nexport function hasLoadedNamespace(ns, i18n) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!i18n.languages || !i18n.languages.length) {\n    warnOnce('i18n.languages were undefined or empty', i18n.languages);\n    return true;\n  }\n\n  var lng = i18n.languages[0];\n  var fallbackLng = i18n.options ? i18n.options.fallbackLng : false;\n  var lastLng = i18n.languages[i18n.languages.length - 1]; // we're in cimode so this shall pass\n\n  if (lng.toLowerCase() === 'cimode') return true;\n\n  var loadNotPending = function loadNotPending(l, n) {\n    var loadState = i18n.services.backendConnector.state[\"\".concat(l, \"|\").concat(n)];\n    return loadState === -1 || loadState === 2;\n  }; // bound to trigger on event languageChanging\n  // so set ready to false while we are changing the language\n  // and namespace pending (depends on having a backend)\n\n\n  if (options.bindI18n && options.bindI18n.indexOf('languageChanging') > -1 && i18n.services.backendConnector.backend && i18n.isLanguageChangingTo && !loadNotPending(i18n.isLanguageChangingTo, ns)) return false; // loaded -> SUCCESS\n\n  if (i18n.hasResourceBundle(lng, ns)) return true; // were not loading at all -> SEMI SUCCESS\n\n  if (!i18n.services.backendConnector.backend) return true; // failed loading ns - but at least fallback is not pending -> SEMI SUCCESS\n\n  if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n  return false;\n}\nexport function getDisplayName(Component) {\n  return Component.displayName || Component.name || (typeof Component === 'string' && Component.length > 0 ? Component : 'Unknown');\n}","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect, useContext, useRef } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context';\nimport { warnOnce, loadNamespaces, hasLoadedNamespace } from './utils';\nexport function useTranslation(ns) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // assert we have the needed i18nInstance\n  var i18nFromProps = props.i18n;\n\n  var _ref = useContext(I18nContext) || {},\n      i18nFromContext = _ref.i18n,\n      defaultNSFromContext = _ref.defaultNS;\n\n  var i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n\n  if (!i18n) {\n    warnOnce('You will need pass in an i18next instance by using initReactI18next');\n\n    var notReadyT = function notReadyT(k) {\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n\n    var retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n\n  var i18nOptions = _objectSpread({}, getDefaults(), {}, i18n.options.react, {}, props);\n\n  var useSuspense = i18nOptions.useSuspense; // prepare having a namespace\n\n  var namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation']; // report namespaces as used\n\n  if (i18n.reportNamespaces.addUsedNamespaces) i18n.reportNamespaces.addUsedNamespaces(namespaces); // are we ready? yes if all namespaces in first language are loaded already (either with data or empty object on failed load)\n\n  var ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(function (n) {\n    return hasLoadedNamespace(n, i18n, i18nOptions);\n  }); // binding t function to namespace (acts also as rerender trigger)\n\n  function getT() {\n    return {\n      t: i18n.getFixedT(null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0])\n    };\n  }\n\n  var _useState = useState(getT()),\n      _useState2 = _slicedToArray(_useState, 2),\n      t = _useState2[0],\n      setT = _useState2[1]; // seems we can't have functions as value -> wrap it in obj\n\n\n  var isMounted = useRef(true);\n  useEffect(function () {\n    var bindI18n = i18nOptions.bindI18n,\n        bindI18nStore = i18nOptions.bindI18nStore;\n    isMounted.current = true; // if not ready and not using suspense load the namespaces\n    // in side effect and do not call resetT if unmounted\n\n    if (!ready && !useSuspense) {\n      loadNamespaces(i18n, namespaces, function () {\n        if (isMounted.current) setT(getT());\n      });\n    }\n\n    function boundReset() {\n      if (isMounted.current) setT(getT());\n    } // bind events to trigger change, like languageChanged\n\n\n    if (bindI18n && i18n) i18n.on(bindI18n, boundReset);\n    if (bindI18nStore && i18n) i18n.store.on(bindI18nStore, boundReset); // unbinding on unmount\n\n    return function () {\n      isMounted.current = false;\n      if (bindI18n && i18n) bindI18n.split(' ').forEach(function (e) {\n        return i18n.off(e, boundReset);\n      });\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(function (e) {\n        return i18n.store.off(e, boundReset);\n      });\n    };\n  }, [namespaces.join()]); // re-run effect whenever list of namespaces changes\n\n  var ret = [t.t, i18n, ready];\n  ret.t = t.t;\n  ret.i18n = i18n;\n  ret.ready = ready; // return hook stuff if ready\n\n  if (ready) return ret; // not yet loaded namespaces -> load them -> and return if useSuspense option set false\n\n  if (!ready && !useSuspense) return ret; // not yet loaded namespaces -> load them -> and trigger suspense\n\n  throw new Promise(function (resolve) {\n    loadNamespaces(i18n, namespaces, function () {\n      if (isMounted.current) setT(getT());\n      resolve();\n    });\n  });\n}","import React, { useState } from 'react'\nimport { Input, Label } from 'reactstrap'\nimport * as types from './types'\nimport { RequiredSign } from '../common/required-indication'\nimport { useTranslation } from 'react-i18next'\n// import i18n from '../i18n'\n\nexport const TextAreaInput: React.FC<types.TextAreaInputProps> = ({\n  value,\n  isRequired,\n  minLength,\n  maxLength,\n  className,\n  texts,\n  attrs,\n  onChange,\n  valid,\n  invalid,\n  innerRef,\n  locale\n}) => {\n  const [errMessage, setErrMessage] = useState('')\n  const [targetValue, setTargetValue] = useState(value)\n  const { t } = useTranslation()\n\n  // i18n.changeLanguage(locale)\n\n  const handleChange = (val: any) => {\n    setTargetValue(val.target.value)\n    onChange(val)\n  }\n\n  const handleBlur = () => {\n    if (isRequired) {\n      if (targetValue === '') {\n        setErrMessage(texts?.empty || 'Please fill out this field')\n        setTargetValue(value)\n      } else {\n        if (minLength !== undefined && minLength > targetValue.length) {\n          setErrMessage(`Must be minimum of ${minLength} characters only`)\n        } else if (maxLength !== undefined && maxLength < targetValue.length) {\n          setErrMessage(`Must be maximum of ${maxLength} characters only`)\n        } else {\n          setErrMessage('')\n        }\n      }\n    } else {\n      setErrMessage('')\n    }\n    // function to convert full-width to half-width\n    const toASCII = (chars: any) => {\n      var ascii = ''\n      for (var i = 0, l = chars.length; i < l; i++) {\n        var c = chars[i].charCodeAt(0)\n\n        // make sure we only convert half-full width char\n        if (c >= 0xff00 && c <= 0xffef) {\n          c = 0xff & (c + 0x20)\n        }\n\n        ascii += String.fromCharCode(c)\n      }\n\n      return ascii\n    }\n    setTargetValue(\n      toASCII(\n        targetValue\n          .replace(/(^\\s*)|(\\s*$)/gi, '') // removes leading and trailing spaces\n          .replace(/[ ]{2,}/gi, ' ') // replaces multiple spaces with one space\n          .replace(/\\n +/, '\\n') // Removes spaces after newlines\n      )\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <Label>\n        {attrs?.title} &nbsp; {targetValue.length}/{maxLength} <RequiredSign />\n      </Label>\n      <Input\n        minLength={minLength}\n        maxLength={maxLength}\n        type='textarea'\n        value={targetValue}\n        required={isRequired}\n        name={attrs?.name}\n        placeholder={attrs?.placeholder}\n        style={attrs?.style}\n        invalid={errMessage !== ''}\n        onBlur={handleBlur}\n        onChange={(val: any) => handleChange(val)}\n        className={\n          (valid ? 'is-valid ' : invalid ? 'is-invalid ' : '') + className\n        }\n        innerRef={innerRef}\n        locale={locale}\n      />\n      <p className='text-danger'>{errMessage}</p>\n      <p>{t('error_messages.required')}</p>\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react'\nimport { Input, Label } from 'reactstrap'\nimport * as types from './types'\nimport { RequiredSign } from '../common/required-indication'\n\nexport const PostalInput: React.FC<types.PostalInputProps> = ({\n  value,\n  isRequired,\n  className,\n  onChange,\n  texts,\n  attrs,\n  minLength = 3,\n  maxLength = 10,\n  innerRef\n}) => {\n  const [errMessage, setErrMessage] = useState('')\n  const [targetValue, setTargetValue] = useState(value)\n\n  const handleChange = (val: any) => {\n    setTargetValue(val.target.value)\n    onChange(val)\n  }\n\n  const handleBlur = () => {\n    // eslint-disable-next-line no-useless-escape\n    const singleHypenSpace = /^(?=.{1,10}$)([a-zA-Z0-9]+\\s{0,1}[a-zA-Z0-9]*\\-{0,1}[a-zA-Z0-9]+)$/\n    const latinChar = /^[A-Za-z]+$/\n    const alphaFullExp = /^[Ａ-ｚ]+$/\n\n    if (isRequired) {\n      if (targetValue === '') {\n        setErrMessage(texts?.empty || 'Please fill out this field')\n        setTargetValue(value)\n      } else if (\n        !(\n          targetValue.match(singleHypenSpace) ||\n          targetValue.match(latinChar) ||\n          targetValue.match(alphaFullExp)\n        )\n      ) {\n        setErrMessage(texts?.invalid)\n      } else {\n        if (minLength !== undefined && minLength > targetValue.length) {\n          setErrMessage(`Must be minimum of ${minLength} characters only`)\n        } else {\n          setErrMessage('')\n        }\n      }\n    } else {\n      setErrMessage('')\n    }\n    // function to convert full-width to half-width\n    const toASCII = (chars: any) => {\n      var ascii = ''\n      for (var i = 0, l = chars.length; i < l; i++) {\n        var c = chars[i].charCodeAt(0)\n\n        // make sure we only convert half-full width char\n        if (c >= 0xff00 && c <= 0xffef) {\n          c = 0xff & (c + 0x20)\n        }\n\n        ascii += String.fromCharCode(c)\n      }\n\n      return ascii\n    }\n    setTargetValue(toASCII(targetValue))\n  }\n\n  return (\n    <React.Fragment>\n      <Label>\n        {attrs?.title} {isRequired && <RequiredSign />}\n      </Label>\n      <Input\n        value={targetValue}\n        required={isRequired}\n        style={attrs?.style}\n        className={className}\n        placeholder={attrs?.placeholder}\n        invalid={errMessage !== ''}\n        onBlur={handleBlur}\n        onChange={(val: any) => handleChange(val)}\n        minLength={minLength}\n        maxLength={maxLength}\n        innerRef={innerRef}\n      />\n      <p className='text-danger'>{errMessage}</p>\n    </React.Fragment>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport CreatableSelect from 'react-select/creatable'\nimport * as types from './types'\nimport { Label } from 'reactstrap'\nimport { RequiredSign } from '../common/required-indication'\n\nexport const renderErrorMessage = (error: string) => {\n  if (error !== '')\n    return (\n      <p\n        style={{\n          color: 'red'\n        }}\n      >\n        {error}\n      </p>\n    )\n  return ''\n}\n\nexport const SelectInput: React.FC<types.SelectInputProps> = ({\n  isRequired,\n  options,\n  value,\n  texts,\n  isMulti,\n  onChange,\n  classNamePrefix,\n  isClearable,\n  isDisabled,\n  onCreateOption,\n  defaultValue,\n  getOptionLabel,\n  getOptionValue,\n  attrs,\n  innerRef\n}) => {\n  const [selectedOptions, setSelectedOptions] = useState(value)\n  const [error, setError] = useState('')\n  useEffect(() => {}, [error])\n\n  const handleChange = (selected: any) => {\n    setSelectedOptions(selected)\n    onChange(selected)\n  }\n\n  const handleBlur = () => {\n    if (isRequired) {\n      if (selectedOptions === null) {\n        // console.log('true')\n        setError(texts?.empty || `Please select ${attrs?.title}`)\n        setSelectedOptions(value)\n      } else {\n        setError('')\n      }\n    } else {\n      setError('')\n    }\n    // console.log(selectedOptions)\n  }\n\n  return (\n    <React.Fragment>\n      <Label>\n        {attrs?.title} {isRequired && <RequiredSign />}\n      </Label>\n      <CreatableSelect\n        isMulti={isMulti}\n        isRequired={isRequired}\n        options={options}\n        value={value}\n        classNamePrefix={classNamePrefix}\n        onChange={(selected: any) => handleChange(selected)}\n        onBlur={handleBlur}\n        invalid={error !== ''}\n        onCreateOption={onCreateOption}\n        defaultValue={defaultValue}\n        isClearable={isClearable}\n        name={attrs?.name}\n        placeholder={attrs?.placeholder}\n        style={attrs?.style}\n        isDisabled={isDisabled}\n        getOptionLabel={getOptionLabel}\n        getOptionValue={getOptionValue}\n        innerRef={innerRef}\n      />\n      <p className='text-danger'>{renderErrorMessage(error)}</p>\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react'\r\nimport * as types from './types'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Label, Input } from 'reactstrap'\r\nimport { RequiredSign } from '../common/required-indication'\r\n\r\nexport const CountryInput: React.FC<types.InputType> = ({\r\n  isRequired,\r\n  attrs,\r\n  texts,\r\n  value,\r\n  innerRef,\r\n  className,\r\n  valid,\r\n  invalid,\r\n  onChange\r\n}) => {\r\n  const [textVal, setTextVal] = useState(value)\r\n\r\n  const [errMessage, setErrMessage] = useState('')\r\n\r\n  const onChangeHandler = (value: any) => {\r\n    onChange();\r\n    const check = value.replace(/[^a-zA-Z0-9０-９Ａ-ｚ]/g, '')\r\n    checkLength(check)\r\n    checkFormat(check)\r\n    setTextVal(check.toUpperCase())\r\n  }\r\n\r\n  const checkLength = (val: any) => {\r\n    if (val.length == 1) {\r\n      setErrMessage(texts.invalid)\r\n    } else if (val.length === 0) {\r\n      setErrMessage(texts.empty)\r\n    } else {\r\n      setErrMessage('')\r\n    }\r\n  }\r\n\r\n  const checkFormat = (val: any) => {\r\n    const numberExp = /^[0-9]*$/\r\n    const numberFullExp = /^[０-９]*$/\r\n    const alphaExp = /^[A-Za-z]+$/\r\n    const alphaFullExp = /^[Ａ-ｚ]+$/\r\n    if (\r\n      !(\r\n        val.match(numberExp) ||\r\n        val.match(alphaExp) ||\r\n        val.match(numberFullExp) ||\r\n        val.match(alphaFullExp)\r\n      )\r\n    ) {\r\n      setErrMessage(texts.invalid)\r\n    } else {\r\n      setErrMessage('');\r\n    }\r\n  }\r\n\r\n  const toASCII = (chars: any) => {\r\n    var ascii = ''\r\n    for (var i = 0, l = chars.length; i < l; i++) {\r\n      var c = chars[i].charCodeAt(0)\r\n      if (c >= 0xff00 && c <= 0xffef) {\r\n        c = 0xff & (c + 0x20)\r\n      }\r\n      ascii += String.fromCharCode(c)\r\n    }\r\n    const numberExp = /^[0-9]*$/\r\n    const numberFullExp = /^[０-９]*$/\r\n    const alphaExp = /^[A-Za-z]+$/\r\n    const alphaFullExp = /^[Ａ-ｚ]+$/\r\n    if (\r\n      !(\r\n        ascii.match(numberExp) ||\r\n        ascii.match(alphaExp) ||\r\n        ascii.match(numberFullExp) ||\r\n        ascii.match(alphaFullExp)\r\n      )\r\n    ) {\r\n      setTextVal('')\r\n      setErrMessage(texts.invalid);\r\n      checkLength(ascii);\r\n    } else {\r\n      setErrMessage('');\r\n      setTextVal(ascii);\r\n      checkLength(ascii);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Label>\r\n        {attrs.title} { isRequired && <RequiredSign />}\r\n      </Label>\r\n      <Input\r\n        type='text'\r\n        value={textVal}\r\n        required={isRequired}\r\n        name={attrs.name}\r\n        placeholder={attrs.placeholder}\r\n        style={attrs.style}\r\n        minLength={2}\r\n        maxLength={3}\r\n        onChange={(e: any) => onChangeHandler(e.target.value)}\r\n        onBlur={() => toASCII(textVal)}\r\n        invalid={errMessage !== ''}\r\n        innerRef={innerRef}\r\n        className={(valid ? \"is-valid \" : invalid ? \"is-invalid \" : \"\") + className}\r\n      />\r\n      <p className='text-danger'>{errMessage}</p>\r\n      <p className='text-muted'>ex: JP or JPN or 392</p>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport * as types from './types'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Label, Input } from 'reactstrap'\r\nimport { RequiredSign } from '../common/required-indication'\r\n\r\nexport const NumberInput: React.FC<types.InputType> = ({\r\n  isRequired,\r\n  isDecimal,\r\n  attrs,\r\n  texts,\r\n  value,\r\n  onChange,\r\n  decimalPlace,\r\n  valid,\r\n  invalid,\r\n  className,\r\n  innerRef\r\n}) => {\r\n  const [textVal, setTextVal] = useState(value)\r\n  const [errMessage, setErrMessage] = useState('')\r\n  const decimalCount = decimalPlace ? decimalPlace + 1 : decimalPlace || 3;\r\n  const onChangeHandler = (value: any) => {\r\n    onChange();\r\n    const num = value.target.value;\r\n    if (isDecimal) {\r\n      const check = num.replace(/[^0-9０-９\\..]/g, '');\r\n      if (num.charAt(0) === '.') {\r\n        setTextVal(num.slice(1))\r\n      } else {\r\n        setTextVal(check)\r\n      }\r\n      const pos = num.indexOf('.') + 1\r\n      if (pos > 1) {\r\n        const decimal = num.indexOf('.') + decimalCount;\r\n        const num1 = num.substr(0, pos) + num.slice(pos).replace('.', '')\r\n        setTextVal(num1.substr(0, decimal));\r\n        checkValue(num1.substr(0, decimal));\r\n      }\r\n    } else {\r\n      const check = num.replace(/[^0-9０-９]/g, '')\r\n      checkValue(check)\r\n      setTextVal(check)\r\n    }\r\n  }\r\n\r\n  const checkValue = (num: any) => {\r\n    if (num.length !== 0) {\r\n      setErrMessage('')\r\n      if (num > attrs.max || num < attrs.min) {\r\n        setErrMessage(texts.invalid);\r\n      } else {\r\n        setErrMessage('');\r\n      }\r\n    } else {\r\n      setErrMessage(texts.empty)\r\n    }\r\n  }\r\n\r\n  const toASCII = (chars: any) => {\r\n    var ascii = ''\r\n    for (var i = 0, l = chars.length; i < l; i++) {\r\n      var c = chars[i].charCodeAt(0)\r\n      if (c >= 0xff00 && c <= 0xffef) {\r\n        c = 0xff & (c + 0x20)\r\n      }\r\n      ascii += String.fromCharCode(c)\r\n    }\r\n    const num = parseInt(ascii);\r\n    if (num > attrs.max || num < attrs.min) {\r\n      setTextVal('')\r\n      setErrMessage(texts.invalid);\r\n      checkValue(ascii);\r\n    } else {\r\n      setTextVal(ascii);\r\n      setErrMessage('');\r\n      checkValue(ascii);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Label>\r\n        {attrs.title} { isRequired && <RequiredSign />}\r\n      </Label>\r\n      <Input\r\n        type=\"text\"\r\n        value={textVal}\r\n        required={isRequired}\r\n        name={attrs.name}\r\n        placeholder={attrs.placeholder}\r\n        style={attrs.style}\r\n        onChange={(value: any) => onChangeHandler(value)}\r\n        onBlur={() => toASCII(textVal)}\r\n        invalid={errMessage !== ''}\r\n        className={(valid ? \"is-valid \" : invalid ? \"is-invalid \" : \"\") + className}\r\n        innerRef={innerRef}\r\n      />\r\n      <p className='text-danger'>{errMessage}</p>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","/* eslint-disable no-useless-escape */\r\nimport React, { useState } from 'react'\r\nimport { Input, Label } from 'reactstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport * as types from './types'\r\nimport { ErrorMessage } from '../common/error-message'\r\nimport { RequiredSign } from '../common/required-indication'\r\n\r\nexport const EmailInput: React.FC<types.EmailType> = ({\r\n  value,\r\n  valid,\r\n  invalid,\r\n  required,\r\n  minLength,\r\n  maxLength,\r\n  attrs,\r\n  texts,\r\n  innerRef,\r\n  onChange\r\n}) => {\r\n  const [error, setError] = useState('')\r\n  const [targetValue, setTargetValue] = useState(value)\r\n  const [toBeValidate, setToBeValidate] = useState(targetValue)\r\n\r\n  const renderTextCounter = () => (\r\n    <React.Fragment>\r\n      {toBeValidate.length}/{maxLength || 320}\r\n    </React.Fragment>\r\n  )\r\n\r\n  const validateLength = () => {\r\n    const fixToBeValidate = toBeValidate\r\n      .replace(/(^\\s*)|(\\s*$)/gi, '')\r\n      .replace(/[ ]{2,}/gi, ' ')\r\n      .replace(/\\n +/, '\\n')\r\n\r\n    if (minLength !== undefined && minLength > fixToBeValidate.length) {\r\n      setError(`Must be minimum of ${minLength} characters only`)\r\n    } else if (maxLength !== undefined && maxLength < fixToBeValidate.length) {\r\n      setError(`Must be maximum of ${maxLength} characters only`)\r\n    } else {\r\n      validateEmail()\r\n    }\r\n  }\r\n\r\n  const validateRequired = () => {\r\n    if (required === true) {\r\n      if (toBeValidate === '') {\r\n        setError(texts?.empty || `Please enter ${attrs?.title}`)\r\n        setTargetValue('')\r\n      } else {\r\n        validateLength()\r\n      }\r\n    } else {\r\n      validateLength()\r\n    }\r\n  }\r\n\r\n  const validateEmail = () => {\r\n    const fixedEmail = toASCII(\r\n      toBeValidate\r\n        .replace(/(^\\s*)|(\\s*$)/gi, '')\r\n        .replace(/[ ]{2,}/gi, ' ')\r\n        .replace(/\\n +/, '\\n')\r\n    )\r\n    // eslint-disable-next-line no-control-regex\r\n    const expression = /(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0]+)*|\"((([ \\t]*\\r\\n)?[ \\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0]))*(([ \\t]*\\r\\n)?[ \\t]+)?\")@(([a-z\\d\\u00A0]|[a-z\\d\\u00A0][a-z\\d\\-._~\\u00A0]*[a-z\\d\\u00A0])\\.)+([a-z\\u00A0]|[a-z\\u00A0][a-z\\d\\-._~\\u00A0]*[a-z\\u00A0])\\.?$/i\r\n    const isValid = expression.test(String(fixedEmail).toLowerCase())\r\n    if (!isValid) {\r\n      setError(`${texts?.invalid || 'Invalid format'}`)\r\n      setTargetValue(value)\r\n    } else {\r\n      setError('')\r\n    }\r\n  }\r\n\r\n  const toASCII = (chars: any) => {\r\n    var ascii = ''\r\n    for (var i = 0, l = chars.length; i < l; i++) {\r\n      var c = chars[i].charCodeAt(0)\r\n      if (c >= 0xff00 && c <= 0xffef) {\r\n        c = 0xff & (c + 0x20)\r\n      }\r\n      ascii += String.fromCharCode(c)\r\n    }\r\n    return ascii\r\n  }\r\n\r\n  const removeSpaces = () => {\r\n    const fixTargetValue = value\r\n      .replace(/(^\\s*)|(\\s*$)/gi, '')\r\n      .replace(/[ ]{2,}/gi, ' ')\r\n      .replace(/\\n +/, '\\n')\r\n    const fixToBeValidate = toBeValidate\r\n      .replace(/(^\\s*)|(\\s*$)/gi, '')\r\n      .replace(/[ ]{2,}/gi, ' ')\r\n      .replace(/\\n +/, '\\n')\r\n    setToBeValidate(fixToBeValidate)\r\n    setTargetValue(fixTargetValue)\r\n  }\r\n\r\n  const handleBlur = () => {\r\n    validateRequired()\r\n    if (error !== '') {\r\n      removeSpaces()\r\n      setTargetValue(\r\n        toASCII(\r\n          value\r\n            .replace(/(^\\s*)|(\\s*$)/gi, '')\r\n            .replace(/[ ]{2,}/gi, ' ')\r\n            .replace(/\\n +/, '\\n')\r\n        )\r\n      )\r\n      setToBeValidate(\r\n        toASCII(\r\n          toBeValidate\r\n            .replace(/(^\\s*)|(\\s*$)/gi, '')\r\n            .replace(/[ ]{2,}/gi, ' ')\r\n            .replace(/\\n +/, '\\n')\r\n        )\r\n      )\r\n    } else {\r\n      setToBeValidate(\r\n        toASCII(\r\n          toBeValidate\r\n            .replace(/(^\\s*)|(\\s*$)/gi, '')\r\n            .replace(/[ ]{2,}/gi, ' ')\r\n            .replace(/\\n +/, '\\n')\r\n        )\r\n      )\r\n      setTargetValue(\r\n        toASCII(\r\n          targetValue\r\n            .replace(/(^\\s*)|(\\s*$)/gi, '')\r\n            .replace(/[ ]{2,}/gi, ' ')\r\n            .replace(/\\n +/, '\\n')\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleChange = (e: any) => {\r\n    e.preventDefault()\r\n    const setNoWhiteSpace = e.target.value\r\n    setToBeValidate(setNoWhiteSpace.replace(/(^\\s*)/gi, ''))\r\n    onChange(e)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {required && <RequiredSign />}\r\n      <Label>\r\n        {attrs?.title}: {renderTextCounter()}\r\n      </Label>\r\n      <Input\r\n        type='text'\r\n        value={toBeValidate}\r\n        required={required}\r\n        style={attrs?.style}\r\n        className={attrs?.className}\r\n        placeholder={attrs?.placeHolder || `Enter ${attrs?.title || ''}`}\r\n        invalid={invalid || error !== ''}\r\n        onBlur={handleBlur}\r\n        onChange={(val: any) => handleChange(val)}\r\n        minLength={minLength || 5}\r\n        maxLength={320}\r\n        innerRef={innerRef}\r\n        valid={valid}\r\n      />\r\n      <ErrorMessage error={error} />\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Label } from 'reactstrap'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport * as types from './types'\r\nimport { ErrorMessage } from '../common/error-message'\r\nimport { RequiredSign } from '../common/required-indication'\r\n\r\nexport const TimePicker: React.FC<types.TimePickerProps> = ({\r\n  required,\r\n  attrs,\r\n  timeFormat,\r\n  value,\r\n  customInput,\r\n  texts,\r\n  inputType,\r\n  onChange,\r\n  onSelect,\r\n  innerRef\r\n}) => {\r\n  const [startTime, setStartTime] = useState(value)\r\n  const [error, setError] = useState('')\r\n\r\n  const validateTime = () => {\r\n    if (startTime === null) {\r\n      setError(texts?.invalid || `Invalid Format`)\r\n    } else if (startTime === '') {\r\n      setError(texts?.empty || `Please enter a valid ${attrs?.title}`)\r\n    } else {\r\n      setError('')\r\n    }\r\n  }\r\n\r\n  const handleRawChange = (e: any) => {\r\n    const checkChar = /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/\r\n    const checkTime = checkChar.test(e)\r\n    if (timeFormat === 'hh:mm') {\r\n      if (e.length > 5) {\r\n        setError(`Must be maximum of 5 characters`)\r\n        setStartTime(null)\r\n      } else if (e.length < 0) {\r\n        setError(`Must be minimum of 0 characters`)\r\n        setStartTime(null)\r\n      } else if (!checkTime) {\r\n        setError(texts?.empty || `Please enter a valid ${attrs?.title}`)\r\n      } else {\r\n        setError('')\r\n      }\r\n    } else {\r\n      if (e.length > 8) {\r\n        setError(`Must be maximum of 8 characters`)\r\n        setStartTime(null)\r\n      } else if (e.length < 0) {\r\n        setError(`Must be minimum of 0 characters`)\r\n        setStartTime(null)\r\n      } else if (!checkTime) {\r\n        setError(texts?.empty || `Please enter a valid ${attrs?.title}`)\r\n      } else {\r\n        setError('')\r\n      }\r\n    }\r\n  }\r\n\r\n  const validateRequired = () => {\r\n    if (required === true) {\r\n      if (startTime === '') {\r\n        setError(texts?.empty || `Please enter a valid ${attrs?.title}`)\r\n      } else {\r\n        validateTime()\r\n      }\r\n    } else {\r\n      validateTime()\r\n    }\r\n  }\r\n\r\n  const handleChange = (val: any) => {\r\n    setStartTime(val)\r\n    onChange(val)\r\n  }\r\n\r\n  const handleBlur = () => {\r\n    validateRequired()\r\n  }\r\n\r\n  const DisabledInput = React.forwardRef(\r\n    ({ value, onClick, onSelect }: any, ref: any) => (\r\n      <input\r\n        ref={ref}\r\n        onClick={onClick}\r\n        value={value}\r\n        onChange={validateRequired}\r\n        onBlur={handleBlur}\r\n        onSelect={validateRequired && onSelect}\r\n        placeholder={attrs?.placeholder}\r\n        className={\r\n          error !== ''\r\n            ? `border border-danger form-control ${attrs?.className}`\r\n            : `${attrs?.className} form-control`\r\n        }\r\n        required={required}\r\n      />\r\n    )\r\n  )\r\n\r\n  if (inputType === 'input')\r\n    return (\r\n      <React.Fragment>\r\n        {required && <RequiredSign />}\r\n        <Label>{attrs?.title}</Label>\r\n        <br />\r\n        {timeFormat === 'hh:mm' ? (\r\n          <DatePicker\r\n            selected={startTime}\r\n            showTimeSelect\r\n            showTimeSelectOnly\r\n            timeIntervals={1}\r\n            timeCaption='Time'\r\n            dateFormat='HH:mm'\r\n            className={\r\n              error !== ''\r\n                ? `border border-danger ${attrs?.className}`\r\n                : attrs?.className\r\n            }\r\n            onBlur={handleBlur}\r\n            customInput={customInput}\r\n            onSelect={onSelect && validateRequired}\r\n            onChange={(date: any) => handleChange(date)}\r\n            onChangeRaw={(date: any) => handleRawChange(date.target.value)}\r\n            placeholderText={\r\n              attrs?.placeholder || `Enter ${attrs?.title || 'Time'}`\r\n            }\r\n            ref={innerRef}\r\n            required={required}\r\n          />\r\n        ) : (\r\n          <DatePicker\r\n            selected={startTime}\r\n            showTimeSelect\r\n            showTimeSelectOnly\r\n            timeIntervals={1}\r\n            timeCaption='Time'\r\n            dateFormat='HH:mm:ss'\r\n            className={\r\n              error !== ''\r\n                ? `border border-danger ${attrs?.className}`\r\n                : attrs?.className\r\n            }\r\n            customInput={customInput}\r\n            onBlur={handleBlur}\r\n            onSelect={onSelect}\r\n            onChange={(date: any) => handleChange(date)}\r\n            onChangeRaw={(date: any) => handleRawChange(date.target.value)}\r\n            placeholderText={\r\n              attrs?.placeholder || `Enter ${attrs?.title || 'Time'}`\r\n            }\r\n            ref={innerRef}\r\n            required={required}\r\n          />\r\n        )}\r\n        <p\r\n          style={{\r\n            marginBottom: '2px',\r\n            fontSize: '11px'\r\n          }}\r\n        >\r\n          {timeFormat === 'hh:mm' ? 'HH:MM' : 'HH:MM:SS'}\r\n        </p>\r\n        <ErrorMessage error={error} />\r\n      </React.Fragment>\r\n    )\r\n  else {\r\n    return (\r\n      <React.Fragment>\r\n        {required && <RequiredSign />}\r\n        <Label>{attrs?.title}</Label>\r\n        <br />\r\n        {timeFormat === 'hh:mm' ? (\r\n          <DatePicker\r\n            selected={startTime}\r\n            showTimeSelect\r\n            showTimeSelectOnly\r\n            timeCaption='Time'\r\n            dateFormat='HH:mm'\r\n            className={\r\n              error !== ''\r\n                ? `border border-danger ${attrs?.className}`\r\n                : attrs?.className\r\n            }\r\n            onBlur={handleBlur}\r\n            customInput={customInput || <DisabledInput />}\r\n            onSelect={onSelect}\r\n            onChange={(date: any) => handleChange(date)}\r\n            onChangeRaw={(date: any) => handleRawChange(date.target.value)}\r\n            placeholderText={\r\n              attrs?.placeholder || `Enter ${attrs?.title || 'Time'}`\r\n            }\r\n            isClearable\r\n            required={required}\r\n            ref={innerRef}\r\n          />\r\n        ) : (\r\n          <DatePicker\r\n            selected={startTime}\r\n            showTimeSelect\r\n            showTimeSelectOnly\r\n            timeIntervals={1}\r\n            timeCaption='Time'\r\n            dateFormat='HH:mm:ss'\r\n            className={\r\n              error !== ''\r\n                ? `border border-danger ${attrs?.className}`\r\n                : attrs?.className\r\n            }\r\n            customInput={customInput || <DisabledInput />}\r\n            onBlur={handleBlur}\r\n            onSelect={onSelect}\r\n            onChange={(date: any) => handleChange(date)}\r\n            onChangeRaw={(date: any) => handleRawChange(date.target.value)}\r\n            placeholderText={\r\n              attrs?.placeholder || `Enter ${attrs?.title || 'Time'}`\r\n            }\r\n            isClearable\r\n            required={required}\r\n            ref={innerRef}\r\n          />\r\n        )}\r\n        <p\r\n          style={{\r\n            marginBottom: '1px',\r\n            fontSize: '11px'\r\n          }}\r\n        >\r\n          {timeFormat === 'hh:mm' ? 'HH:MM' : 'HH:MM:SS'}\r\n        </p>\r\n        <ErrorMessage error={error} />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nexport const TimeRangePicker: React.FC = () => {\r\n  const [startTime, setStartTime] = useState(new Date())\r\n  const [endTime, setEndTime] = useState(new Date())\r\n  return (\r\n    <React.Fragment>\r\n      <p>Work In Process..</p>\r\n      <DatePicker\r\n        selected={startTime}\r\n        onChange={(date: any) => setStartTime(date)}\r\n        showTimeSelect\r\n        showTimeSelectOnly\r\n        timeIntervals={1}\r\n        timeCaption='Time'\r\n        dateFormat='HH:mm'\r\n      />\r\n      <br />\r\n      <DatePicker\r\n        selected={endTime}\r\n        onChange={(date: any) => setEndTime(date)}\r\n        showTimeSelect\r\n        showTimeSelectOnly\r\n        timeIntervals={1}\r\n        timeCaption='Time'\r\n        dateFormat='HH:mm'\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Label } from 'reactstrap'\r\nimport ReactDatePicker from 'react-datepicker'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport * as types from './types'\r\nimport { ErrorMessage } from '../common/error-message'\r\nimport { RequiredSign } from '../common/required-indication'\r\n\r\nexport const DatePicker: React.FC<types.DatePickerProps> = ({\r\n  value,\r\n  dateFormat,\r\n  onChange,\r\n  onSelect,\r\n  inputType,\r\n  customInput,\r\n  required,\r\n  attrs,\r\n  texts\r\n}) => {\r\n  const [startDate, setStartDate] = useState(value || new Date())\r\n  const [error, setError] = useState('')\r\n\r\n  const handleChange = (val: any) => {\r\n    setStartDate(val)\r\n    onChange(val)\r\n  }\r\n\r\n  const validateDate = () => {\r\n    if (startDate === null) {\r\n      setError(texts?.invalid || `Invalid Format`)\r\n    } else {\r\n      setError('')\r\n    }\r\n  }\r\n\r\n  const validateRequired = () => {\r\n    if (required === true) {\r\n      if (startDate === '') {\r\n        setError(texts?.empty || `Please enter a valid ${attrs?.title}`)\r\n      } else {\r\n        validateDate()\r\n      }\r\n    } else {\r\n      validateDate()\r\n    }\r\n  }\r\n\r\n  const handleBlur = () => {\r\n    validateRequired()\r\n  }\r\n\r\n  const validateDDMMYY = (e: any) => {\r\n    const checkDateSlashes = /^([0-2][0-9]|(3)[0-1])(\\/)(((0)[0-9])|((1)[0-2]))(\\/)\\d{4}$/\r\n    // eslint-disable-next-line no-useless-escape\r\n    const checkDateDashes = /^([0-2][0-9]|(3)[0-1])(\\-)(((0)[0-9])|((1)[0-2]))(\\-)\\d{4}$/\r\n    const checkTime = checkDateSlashes.test(e) || checkDateDashes.test(e)\r\n\r\n    if (e.length > 10) {\r\n      setError(`Must be maximum of 10 characters`)\r\n      setStartDate(null)\r\n    } else if (e.length < 0) {\r\n      setError(`Must be minimum of 0 characters`)\r\n      setStartDate(null)\r\n    } else if (!checkTime) {\r\n      setError(texts?.empty || `Please enter a valid ${attrs?.title}`)\r\n      setStartDate(null)\r\n    } else {\r\n      setError('')\r\n    }\r\n  }\r\n\r\n  const validateMMDDYY = (e: any) => {\r\n    const checkDateSlashes = /^(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\\d\\d$/\r\n    const checkDateDashes = /^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\\d\\d$/\r\n    const checkTime = checkDateSlashes.test(e) || checkDateDashes.test(e)\r\n\r\n    if (e.length > 10) {\r\n      setError(`Must be maximum of 10 characters`)\r\n      setStartDate(null)\r\n    } else if (e.length < 0) {\r\n      setError(`Must be minimum of 0 characters`)\r\n      setStartDate(null)\r\n    } else if (!checkTime) {\r\n      setError(texts?.empty || `Please enter a valid ${attrs?.title}`)\r\n      setStartDate(null)\r\n    } else {\r\n      setError('')\r\n    }\r\n  }\r\n\r\n  const handleRawChange = (e: any) => {\r\n    if (dateFormat === 'MM-DD-YYYY' || dateFormat === 'MM/DD/YYYY') {\r\n      validateMMDDYY(e)\r\n    } else {\r\n      validateDDMMYY(e)\r\n    }\r\n  }\r\n\r\n  const DisabledInput = React.forwardRef(\r\n    ({ value, onClick, onSelect }: any, ref: any) => (\r\n      <input\r\n        required={required}\r\n        ref={ref}\r\n        onClick={onClick}\r\n        value={value}\r\n        onChange={() => {}}\r\n        onBlur={handleBlur}\r\n        onSelect={onSelect && validateRequired}\r\n        placeholder={attrs?.placeholder}\r\n        className={\r\n          error !== ''\r\n            ? `border border-danger form-control ${attrs?.className}`\r\n            : `${attrs?.className} form-control`\r\n        }\r\n      />\r\n    )\r\n  )\r\n  if (inputType === 'input') {\r\n    return (\r\n      <React.Fragment>\r\n        {required && <RequiredSign />}\r\n        <Label>{attrs?.title}</Label>\r\n        <br />\r\n        {dateFormat === 'DD-MM-YYYY' || dateFormat === 'DD/MM/YYYY' ? (\r\n          <ReactDatePicker\r\n            selected={startDate}\r\n            onChange={(date: any) => handleChange(date)}\r\n            onChangeRaw={(date: any) => handleRawChange(date.target.value)}\r\n            onSelect={onSelect || validateRequired}\r\n            dateFormat='dd-MM-yyyy'\r\n            placeholderText={\r\n              attrs?.placeholder || `Enter ${attrs?.title || 'Time'}`\r\n            }\r\n            required={required}\r\n            customInput={customInput}\r\n            className={\r\n              error !== ''\r\n                ? `border border-danger ${attrs?.className}`\r\n                : attrs?.className\r\n            }\r\n            onBlur={handleBlur}\r\n            isClearable\r\n            adjustDateOnChange\r\n          />\r\n        ) : (\r\n          <ReactDatePicker\r\n            selected={startDate}\r\n            onChange={(date: any) => handleChange(date)}\r\n            onChangeRaw={(date: any) => handleRawChange(date.target.value)}\r\n            onSelect={onSelect || validateRequired}\r\n            placeholderText={\r\n              attrs?.placeholder || `Enter ${attrs?.title || 'Time'}`\r\n            }\r\n            required={required}\r\n            customInput={customInput}\r\n            className={\r\n              error !== ''\r\n                ? `border border-danger ${attrs?.className}`\r\n                : attrs?.className\r\n            }\r\n            onBlur={handleBlur}\r\n            isClearable\r\n            adjustDateOnChange\r\n          />\r\n        )}\r\n        <p\r\n          style={{\r\n            marginBottom: '1px',\r\n            fontSize: '11px'\r\n          }}\r\n        >\r\n          {dateFormat === 'DD-MM-YYYY' || dateFormat === 'DD/MM/YYYY'\r\n            ? 'DD-MM-YYYY or DD/MM/YYYY'\r\n            : 'MM-DD-YYYY or MM/DD/YYYY'}\r\n        </p>\r\n        <ErrorMessage error={error} />\r\n      </React.Fragment>\r\n    )\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        {required && <RequiredSign />}\r\n        <Label>{attrs?.title}</Label>\r\n        <br />\r\n        {dateFormat === 'DD-MM-YYYY' || dateFormat === 'DD/MM/YYYY' ? (\r\n          <ReactDatePicker\r\n            selected={startDate}\r\n            onChange={(date: any) => handleChange(date)}\r\n            onChangeRaw={(date: any) => handleRawChange(date.target.value)}\r\n            onSelect={onSelect || validateRequired}\r\n            dateFormat='dd-MM-yyyy'\r\n            placeholderText={\r\n              attrs?.placeholder || `Enter ${attrs?.title || 'Time'}`\r\n            }\r\n            required={required}\r\n            customInput={customInput || <DisabledInput />}\r\n            className={\r\n              error !== ''\r\n                ? `border border-danger ${attrs?.className}`\r\n                : attrs?.className\r\n            }\r\n            onBlur={handleBlur}\r\n            isClearable\r\n            showMonthDropdown\r\n            showYearDropdown\r\n          />\r\n        ) : (\r\n          <ReactDatePicker\r\n            selected={startDate}\r\n            onChange={(date: any) => handleChange(date)}\r\n            onChangeRaw={(date: any) => handleRawChange(date.target.value)}\r\n            onSelect={onSelect || validateRequired}\r\n            placeholderText={\r\n              attrs?.placeholder || `Enter ${attrs?.title || 'Time'}`\r\n            }\r\n            required={required}\r\n            customInput={customInput || <DisabledInput />}\r\n            className={\r\n              error !== ''\r\n                ? `border border-danger ${attrs?.className}`\r\n                : attrs?.className\r\n            }\r\n            onBlur={handleBlur}\r\n            isClearable\r\n            showMonthDropdown\r\n            showYearDropdown\r\n          />\r\n        )}\r\n        <p\r\n          style={{\r\n            marginBottom: '1px',\r\n            fontSize: '11px'\r\n          }}\r\n        >\r\n          {dateFormat === 'DD-MM-YYYY' || dateFormat === 'DD/MM/YYYY'\r\n            ? 'DD-MM-YYYY or DD/MM/YYYY'\r\n            : 'MM-DD-YYY or MM/DD/YYYY'}\r\n        </p>\r\n        <ErrorMessage error={error} />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nexport const DateRangePicker: React.FC = () => {\r\n  const [startDate, setStartDate] = useState(new Date('2014/02/08'))\r\n  const [endDate, setEndDate] = useState(new Date('2014/02/10'))\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <p>Component is still in progress</p>\r\n      <DatePicker\r\n        selected={startDate}\r\n        onChange={(date: any) => setStartDate(date)}\r\n        selectsStart\r\n        startDate={startDate}\r\n        endDate={endDate}\r\n      />\r\n      <br />\r\n      <DatePicker\r\n        selected={endDate}\r\n        onChange={(date: any) => setEndDate(date)}\r\n        selectsEnd\r\n        startDate={startDate}\r\n        endDate={endDate}\r\n        minDate={startDate}\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nexport const DateTimePicker: React.FC = () => {\r\n  const [startDate, setStartDate] = useState(new Date())\r\n  return (\r\n    <React.Fragment>\r\n      <p>Component is still in progress</p>\r\n      <DatePicker\r\n        selected={startDate}\r\n        onChange={(date: any) => setStartDate(date)}\r\n        showTimeSelect\r\n        timeFormat='HH:mm'\r\n        timeIntervals={15}\r\n        timeCaption='time'\r\n        dateFormat='MMMM d, yyyy h:mm aa'\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nexport const DateTimeRangePickerDefault: React.FC = () => {\r\n  const [startDate, setStartDate] = useState(new Date())\r\n  const [endDate, setEndDate] = useState(new Date())\r\n  return (\r\n    <React.Fragment>\r\n      <p>Component is still in progress</p>\r\n      <DatePicker\r\n        selected={startDate}\r\n        onChange={(date: any) => setStartDate(date)}\r\n        showTimeSelect\r\n        timeFormat='HH:mm'\r\n        timeIntervals={15}\r\n        timeCaption='time'\r\n        dateFormat='MMMM d, yyyy h:mm aa'\r\n      />\r\n      <br />\r\n      <DatePicker\r\n        selected={endDate}\r\n        onChange={(date: any) => setEndDate(date)}\r\n        showTimeSelect\r\n        timeFormat='HH:mm'\r\n        timeIntervals={15}\r\n        timeCaption='time'\r\n        dateFormat='MMMM d, yyyy h:mm aa'\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport * as types from './types'\r\nimport { TimePicker } from './time-picker'\r\nimport { TimeRangePicker } from './time-range-picker'\r\nimport { DatePicker } from './date-picker'\r\nimport { DateRangePicker } from './date-range-picker'\r\nimport { DateTimePicker } from './date-time-picker'\r\nimport { DateTimeRangePickerDefault } from './date-time-range-picker'\r\n\r\nexport const DateTimeRangePicker: React.FC<types.DateTimeRangePickerProps> = ({\r\n  type,\r\n  timeFormat,\r\n  dateFormat,\r\n  value,\r\n  attrs,\r\n  texts,\r\n  onChange,\r\n  required,\r\n  customInput,\r\n  inputType,\r\n  onSelect,\r\n  innerRef\r\n}) => {\r\n  if (type === 'timepicker')\r\n    return (\r\n      <TimePicker\r\n        inputType={inputType}\r\n        onChange={onChange}\r\n        onSelect={onSelect}\r\n        texts={texts}\r\n        attrs={attrs}\r\n        timeFormat={timeFormat}\r\n        value={value}\r\n        required={required}\r\n        customInput={customInput}\r\n        innerRef={innerRef}\r\n      />\r\n    )\r\n  if (type === 'datepicker')\r\n    return (\r\n      <DatePicker\r\n        onChange={onChange}\r\n        onSelect={onSelect}\r\n        inputType={inputType}\r\n        value={value}\r\n        attrs={attrs}\r\n        texts={texts}\r\n        dateFormat={dateFormat}\r\n        required={required}\r\n        customInput={customInput}\r\n        innerRef={innerRef}\r\n      />\r\n    )\r\n  if (type === 'daterangepicker') return <DateRangePicker />\r\n  if (type === 'timerangepicker') return <TimeRangePicker />\r\n  if (type === 'datetimepicker') return <DateTimePicker />\r\n  return <DateTimeRangePickerDefault />\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport * as types from './types'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport * as fa from '@fortawesome/free-solid-svg-icons'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\n\r\nexport const Dialog: React.FC<types.DialogType> = ({\r\n  type,\r\n  headerText,\r\n  bodyText,\r\n  okText,\r\n  closeText,\r\n  callback,\r\n  toggleDialog,\r\n  isOpen,\r\n  className,\r\n  headerClassName,\r\n  bodyClassName,\r\n  footerClassName,\r\n  closeButtonClassName,\r\n  okButtonClassName,\r\n  hideCloseButton,\r\n  onOpened,\r\n  onClosed,\r\n  innerRef\r\n}) => {\r\n  useEffect(() => {\r\n    isOpen && onOpened()\r\n  }, [isOpen])\r\n\r\n  const afterConfirmation = () => {\r\n    toggleDialog()\r\n    callback()\r\n  }\r\n\r\n  const onclose = () => {\r\n    toggleDialog()\r\n    onClosed()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal\r\n        isOpen={isOpen}\r\n        toggle={toggleDialog}\r\n        className={className}\r\n        ref={innerRef}\r\n      >\r\n        <ModalHeader toggle={toggleDialog} className={headerClassName}>\r\n          {type === 'success' ? (\r\n            <FontAwesomeIcon icon={fa.faCheck} color='#28C7B1' size='lg' />\r\n          ) : type === 'warning' ? (\r\n            <FontAwesomeIcon\r\n              icon={fa.faExclamationTriangle}\r\n              color='#FECC68'\r\n              size='lg'\r\n            />\r\n          ) : type === 'error' ? (\r\n            <FontAwesomeIcon\r\n              icon={fa.faExclamationCircle}\r\n              color='#E54E66'\r\n              size='lg'\r\n            />\r\n          ) : type === 'confirm' ? (\r\n            <FontAwesomeIcon icon={fa.faTasks} color='#6B7376' size='lg' />\r\n          ) : type === 'info' ? (\r\n            <FontAwesomeIcon icon={fa.faInfoCircle} color='#6B7376' size='lg' />\r\n          ) : (\r\n            <FontAwesomeIcon icon={fa.faCheck} color='#28C7B1' size='lg' />\r\n          )}{' '}\r\n          {headerText}\r\n        </ModalHeader>\r\n        <ModalBody className={bodyClassName}>{bodyText}</ModalBody>\r\n        <ModalFooter className={footerClassName}>\r\n          {!hideCloseButton && (\r\n            <Button onClick={() => onclose()} color={closeButtonClassName}>\r\n              {closeText}\r\n            </Button>\r\n          )}\r\n          <Button onClick={() => afterConfirmation()} color={okButtonClassName}>\r\n            {okText}\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport { containerStyles, inputStyles } from '../styles'\r\nimport {\r\n  TextField,\r\n  EmailInput,\r\n  DateTimeRangePicker\r\n} from 'cplus_common_library'\r\n\r\nconst TestComponent01 = () => {\r\n  const textFieldRef = useRef(null)\r\n  const emailInputRef = useRef(null)\r\n  const datePickerRef = useRef(null)\r\n  return (\r\n    <div style={containerStyles}>\r\n      <div style={inputStyles}>\r\n        <TextField\r\n          value=''\r\n          innerRef={textFieldRef}\r\n          onChange={() => console.log('TextField Onchange')}\r\n          attrs={{\r\n            title: 'TextField Input',\r\n            placeHolder: 'Enter your project name',\r\n            className: 'nothing',\r\n            style: {\r\n              width: '300px',\r\n              margin: '0'\r\n            }\r\n          }}\r\n          minLength={3}\r\n          maxLength={6}\r\n          required={true}\r\n        />\r\n      </div>\r\n      <div style={inputStyles}>\r\n        <EmailInput\r\n          value=''\r\n          onChange={() => console.log('Email Input Onchange')}\r\n          attrs={{\r\n            placeHolder: 'Enter your email',\r\n            title: 'Email Input',\r\n            style: {\r\n              width: '300px',\r\n              margin: '0'\r\n            }\r\n          }}\r\n          required\r\n          minLength={4}\r\n          maxLength={64}\r\n          innerRef={emailInputRef}\r\n        />\r\n      </div>\r\n      <div style={containerStyles}>\r\n        <DateTimeRangePicker\r\n          value=''\r\n          required={true}\r\n          inputType='input'\r\n          onChange={() => console.log('onChange TimePicker')}\r\n          onSelect={() => console.log('OnSelect TimePicker')}\r\n          type='timepicker'\r\n          timeFormat='hh:mm:ss'\r\n          attrs={{\r\n            title: 'TimePicker Input',\r\n            placeholder: 'Time-in',\r\n            className: 'form-control'\r\n          }}\r\n        />\r\n      </div>\r\n      <div style={containerStyles}>\r\n        <DateTimeRangePicker\r\n          value={new Date()}\r\n          required={true}\r\n          onChange={() => console.log('onChange TimePicker')}\r\n          onSelect={() => console.log('OnSelect TimePicker')}\r\n          type='timepicker'\r\n          timeFormat='hh:mm:ss'\r\n          attrs={{\r\n            title: 'TimePicker Select',\r\n            placeholder: 'Time-in',\r\n            className: 'form-control'\r\n          }}\r\n          innerRef={datePickerRef}\r\n        />\r\n      </div>\r\n      <div style={containerStyles}>\r\n        <DateTimeRangePicker\r\n          value={new Date()}\r\n          required={true}\r\n          onChange={() => console.log('onChange DatePicker')}\r\n          onSelect={() => console.log('OnSelect DatePicker')}\r\n          type='datepicker'\r\n          inputType='input'\r\n          dateFormat='DD/MM/YYYY'\r\n          attrs={{\r\n            title: 'DatePicker Input',\r\n            placeholder: 'Enter Arrival Date',\r\n            className: 'form-control'\r\n          }}\r\n        />\r\n      </div>\r\n      <div style={containerStyles}>\r\n        <DateTimeRangePicker\r\n          value=''\r\n          required={true}\r\n          onChange={() => console.log('onChange DatePicker')}\r\n          onSelect={() => console.log('OnSelect DatePicker')}\r\n          type='datepicker'\r\n          inputType='select'\r\n          dateFormat='MM-DD-YYYY'\r\n          attrs={{\r\n            title: 'DatePicker Select',\r\n            placeholder: 'Please choose Departure Date',\r\n            className: 'form-control'\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TestComponent01\r\n","import React, { useRef, useState } from 'react'\r\nimport { CountryInput, NumberInput, Dialog } from 'cplus_common_library'\r\nimport { Button } from 'reactstrap'\r\nimport { containerStyles } from '../styles'\r\n\r\nconst TestComponent02 = () => {\r\n  const [dialog, setDialog] = useState(false)\r\n  const contryInput = useRef(null)\r\n  const numberInput = useRef(null)\r\n  const refDialog = useRef(null)\r\n  return (\r\n    <div style={containerStyles}>\r\n      <CountryInput\r\n        isRequired\r\n        value=''\r\n        texts={{\r\n          empty: 'Please fill the required field',\r\n          invalid: 'Invalid country code format.'\r\n        }}\r\n        attrs={{\r\n          name: 'inputForm',\r\n          title: 'Country Code',\r\n          placeholder: 'Enter a Country code',\r\n          style: { width: '50%' }\r\n        }}\r\n        className=''\r\n        innerRef={contryInput}\r\n        onChange={() => console.log('country name change')}\r\n      />\r\n      <NumberInput\r\n        isRequired\r\n        value=''\r\n        isDecimal\r\n        texts={{\r\n          empty: 'Please fill the required field',\r\n          invalid: 'Format incorrect'\r\n        }}\r\n        attrs={{\r\n          name: 'number',\r\n          title: 'Input Number',\r\n          placeholder: 'Enter a number',\r\n          min: 5,\r\n          max: 10,\r\n          style: { width: '50%' }\r\n        }}\r\n        onChange={() => console.log('number change')}\r\n        innerRef={numberInput}\r\n      />\r\n      <Dialog\r\n        type='confirm'\r\n        headerText='Confirmation'\r\n        bodyText='Are you sure to proceed?'\r\n        okText='OK'\r\n        closeText='CANCEL'\r\n        isOpen={dialog}\r\n        headerClassName='text-danger'\r\n        okButtonClassName='primary'\r\n        closeButtonClassName='danger'\r\n        toggleDialog={() => setDialog(!dialog)}\r\n        callback={() => alert('This function will work when user clicks OK')}\r\n        onOpened={() => console.log('Dialog Open')}\r\n        onClosed={() => console.log('Dialog Close')}\r\n        innerRef={refDialog}\r\n      />\r\n      <Button onClick={() => setDialog(!dialog)}>Open Dialog</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TestComponent02\r\n","import React, { useRef } from 'react'\r\nimport { containerStyles } from '../styles'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport { TextAreaInput, PostalInput, SelectInput } from 'cplus_common_library'\r\n\r\n// Array for SelectInput\r\nexport const createOption = (label) => ({\r\n  label,\r\n  value: label.toLowerCase().replace(/\\W/g, '')\r\n})\r\n\r\nexport const optionFlavours = [createOption('Chocolate'), createOption('Mango')]\r\n\r\nconst TestComponent03 = () => {\r\n  const textAreaInput = useRef(null)\r\n  const postalInput = useRef(null)\r\n  const selectInput = useRef(null)\r\n\r\n  return (\r\n    <div style={containerStyles}>\r\n      <TextAreaInput\r\n        value=''\r\n        isRequired\r\n        maxLength={20}\r\n        onChange={() => console.log('TextArea Onchange')}\r\n        texts={{\r\n          empty: 'Please fill out this field',\r\n          invalid: 'Format incorrect'\r\n        }}\r\n        minLength={5}\r\n        attrs={{\r\n          title: 'Description:',\r\n          placeholder: 'Enter description',\r\n          style: { width: '100%' }\r\n        }}\r\n        innerRef={textAreaInput}\r\n      />\r\n      <br />\r\n      <PostalInput\r\n        value=''\r\n        isRequired={true}\r\n        onChange={() => console.log('InputPostal Onchange')}\r\n        texts={{\r\n          empty: 'Please fill out this field',\r\n          invalid: 'Format incorrect'\r\n        }}\r\n        attrs={{\r\n          title: 'Country/Zip Code:',\r\n          placeholder: 'Enter postal/zip code',\r\n          style: { width: '100%' }\r\n        }}\r\n        innerRef={postalInput}\r\n      />\r\n      <br />\r\n      <SelectInput\r\n        options={optionFlavours}\r\n        isMulti\r\n        isRequired={true}\r\n        defaultValue={[optionFlavours[0]]}\r\n        classNamePrefix='samplePrefix'\r\n        isClearable\r\n        isDisabled={false}\r\n        onChange={() => console.log('SelectInput Onchange')}\r\n        getOptionLabel={(opt) => opt.label}\r\n        getOptionValue={(opt) => opt.value}\r\n        innerRef={selectInput}\r\n        attrs={{\r\n          title: 'Select Flavor',\r\n          placeholder: 'Please select flavor',\r\n          style: { width: '100%' }\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TestComponent03\r\n","import React from 'react'\r\nimport TestComponent01 from './test/test-01'\r\nimport TestComponent02 from './test/test-02'\r\nimport TestComponent03 from './test/test-03'\r\nimport './style.css'\r\n\r\nconst App = () => {\r\n  return(\r\n    <div className=\"containerFlex\">\r\n      <TestComponent01/>\r\n      <TestComponent02/>\r\n      <TestComponent03/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}
{"version":3,"file":"index.js","sources":["../src/components/common/form/index.tsx","../src/components/text-field/validate.ts","../src/components/common/error-message/styles.ts","../src/components/common/error-message/index.tsx","../src/components/text-field/index.tsx","../src/components/common/submit-button/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Formik, Form } from 'formik'\nimport * as types from './types'\n\nexport const FormComponent: React.FC<types.FormType> = ({\n  children,\n  propValues,\n  validateOnBlur,\n  validateOnChange,\n  onSubmit\n}) => {\n  return (\n    <Formik\n      initialValues={propValues}\n      onSubmit={onSubmit}\n      validateOnChange={validateOnChange}\n      validateOnBlur={validateOnBlur}\n    >\n      {(formikBag: any) => (\n        <Form onSubmit={formikBag.handleSubmit}>{children}</Form>\n      )}\n    </Formik>\n  )\n}\n","import * as yup from 'yup'\n\nexport const validate = async (value: any, name: any, required: any) => {\n  const buildIfRequired = (required: any) => ({\n    // eslint-disable-next-line eqeqeq\n    is: required,\n    then: yup.string(),\n    otherwise: yup.string().required(`${name} is a required Field`)\n  })\n\n  console.log('Value', value)\n  console.log('Name', name)\n  console.log('required', required)\n  let errors: any = ''\n\n  const schema = yup\n    .string()\n    .max(10, `${name} Must be 10 character`)\n    .when(`${name}`, buildIfRequired(required))\n  const result: any = schema\n    .validate(value)\n    .then(() => {\n      errors = null\n      return errors\n    })\n    .catch((e) => {\n      if (e.message !== null || e.message !== undefined) errors = e.message\n      return errors\n    })\n  return result\n}\n","export const styles = {\n  color: 'red'\n}\n","import React from 'react'\nimport { ErrorMessage } from 'formik'\nimport { styles } from './styles'\nimport * as types from './types'\n\nexport const ErrorMessageComponent: React.FC<types.ErrorMessageType> = ({\n  children,\n  render,\n  name,\n  className,\n  component\n}) => {\n  return (\n    <div style={styles}>\n      <ErrorMessage\n        name={name}\n        children={children}\n        render={render}\n        className={className}\n        component={component}\n      />\n    </div>\n  )\n}\n\nErrorMessageComponent.displayName = 'Error Message'\n","import React from 'react'\nimport { Field } from 'formik'\nimport * as types from './types'\nimport { validate } from './validate'\nimport { ErrorMessageComponent } from '../common/error-message'\n\nexport const TextField: React.FC<types.InputType> = ({ name, required }) => {\n  return (\n    <React.Fragment>\n      <Field name={name} validate={(e: any) => validate(e, name, required)} />\n      <ErrorMessageComponent name={name} />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport * as types from './types'\n\nexport const SubmitButton: React.FC<types.SubmitButtonType> = ({\n  styles,\n  text\n}) => <input type='submit' value={text} style={styles} />\n\nSubmitButton.displayName = 'Submit Button'\n"],"names":["FormComponent","children","propValues","validateOnBlur","validateOnChange","onSubmit","React","Formik","initialValues","formikBag","Form","handleSubmit","validate","value","name","required","buildIfRequired","is","then","yup","otherwise","console","log","errors","schema","max","when","result","catch","e","message","undefined","styles","color","ErrorMessageComponent","render","className","component","style","ErrorMessage","displayName","TextField","Fragment","Field","SubmitButton","text","type"],"mappings":";;;;;;IAIaA,aAAa,GAA6B,SAA1CA,aAA0C;MACrDC,gBAAAA;MACAC,kBAAAA;MACAC,sBAAAA;MACAC,wBAAAA;MACAC,gBAAAA;AAEA,SACEC,mBAAA,CAACC,aAAD;AACEC,IAAAA,aAAa,EAAEN;AACfG,IAAAA,QAAQ,EAAEA;AACVD,IAAAA,gBAAgB,EAAEA;AAClBD,IAAAA,cAAc,EAAEA;GAJlB,EAMG,UAACM,SAAD;AAAA,WACCH,mBAAA,CAACI,WAAD;AAAML,MAAAA,QAAQ,EAAEI,SAAS,CAACE;KAA1B,EAAyCV,QAAzC,CADD;AAAA,GANH,CADF;AAYD;;ACrBM,IAAMW,QAAQ,YAARA,QAAQ,CAAUC,KAAV,EAAsBC,IAAtB,EAAiCC,QAAjC;AAAA;AACnB,QAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACD,QAAD;AAAA,aAAoB;AAE1CE,QAAAA,EAAE,EAAEF,QAFsC;AAG1CG,QAAAA,IAAI,EAAEC,UAAA,EAHoC;AAI1CC,QAAAA,SAAS,EAAED,UAAA,GAAaJ,QAAb,CAAyBD,IAAzB;AAJ+B,OAApB;AAAA,KAAxB;;AAOAO,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBT,KAArB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBR,IAApB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,QAAxB;AACA,QAAIQ,MAAM,GAAQ,EAAlB;AAEA,QAAMC,MAAM,GAAGL,UAAA,GAEZM,GAFY,CAER,EAFQ,EAEDX,IAFC,4BAGZY,IAHY,MAGJZ,IAHI,EAGIE,eAAe,CAACD,QAAD,CAHnB,CAAf;AAIA,QAAMY,MAAM,GAAQH,MAAM,CACvBZ,QADiB,CACRC,KADQ,EAEjBK,IAFiB,CAEZ;AACJK,MAAAA,MAAM,GAAG,IAAT;AACA,aAAOA,MAAP;AACD,KALiB,EAMjBK,KANiB,CAMX,UAACC,CAAD;AACL,UAAIA,CAAC,CAACC,OAAF,KAAc,IAAd,IAAsBD,CAAC,CAACC,OAAF,KAAcC,SAAxC,EAAmDR,MAAM,GAAGM,CAAC,CAACC,OAAX;AACnD,aAAOP,MAAP;AACD,KATiB,CAApB;AAUA,2BAAOI,MAAP;AACD,GA5BoB;AAAA;AAAA;AAAA,CAAd;;ACFA,IAAMK,MAAM,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAAf;;ACKA,IAAMC,qBAAqB,GAAqC,SAA1DA,qBAA0D;MACrEjC,gBAAAA;MACAkC,cAAAA;MACArB,YAAAA;MACAsB,iBAAAA;MACAC,iBAAAA;AAEA,SACE/B,mBAAA,MAAA;AAAKgC,IAAAA,KAAK,EAAEN;GAAZ,EACE1B,mBAAA,CAACiC,mBAAD;AACEzB,IAAAA,IAAI,EAAEA;AACNb,IAAAA,QAAQ,EAAEA;AACVkC,IAAAA,MAAM,EAAEA;AACRC,IAAAA,SAAS,EAAEA;AACXC,IAAAA,SAAS,EAAEA;GALb,CADF,CADF;AAWD,CAlBM;AAoBPH,qBAAqB,CAACM,WAAtB,GAAoC,eAApC;;ICnBaC,SAAS,GAA8B,SAAvCA,SAAuC;MAAG3B,YAAAA;MAAMC,gBAAAA;AAC3D,SACET,mBAAA,CAACA,KAAK,CAACoC,QAAP,MAAA,EACEpC,mBAAA,CAACqC,YAAD;AAAO7B,IAAAA,IAAI,EAAEA;AAAMF,IAAAA,QAAQ,EAAE,oBAACiB,CAAD;AAAA,aAAYjB,QAAQ,CAACiB,CAAD,EAAIf,IAAJ,EAAUC,QAAV,CAApB;AAAA;GAA7B,CADF,EAEET,mBAAA,CAAC4B,qBAAD;AAAuBpB,IAAAA,IAAI,EAAEA;GAA7B,CAFF,CADF;AAMD,CAPM;;ICHM8B,YAAY,GAAqC,SAAjDA,YAAiD;AAAA,MAC5DZ,MAD4D,QAC5DA,MAD4D;AAAA,MAE5Da,IAF4D,QAE5DA,IAF4D;AAAA,SAGxDvC,mBAAA,QAAA;AAAOwC,IAAAA,IAAI,EAAC;AAASjC,IAAAA,KAAK,EAAEgC;AAAMP,IAAAA,KAAK,EAAEN;GAAzC,CAHwD;AAAA,CAAvD;AAKPY,YAAY,CAACJ,WAAb,GAA2B,eAA3B;;;;;;"}